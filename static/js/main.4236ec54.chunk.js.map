{"version":3,"sources":["assets/logo.svg","serviceWorker.js","components/Header/header.jsx","components/ContractPage/ContractPage.jsx","components/Table/Table.jsx","utils/index.js","components/UsersTable/UsersTable.jsx","components/UsersPage/UsersPage.jsx","components/AddressesPage/AddressesTable/AddressesTable.jsx","components/AddressesPage/AddressesPage.jsx","components/JournalPage/JournalPage.jsx","components/TransactionsPage/TransactionsPage.jsx","components/ProfilePage/ProfilePage.jsx","components/UsersPage/UserDetail/UserDetail.jsx","routes.js","components/App.jsx","store/reducers.js","store/configureStore.js","index.jsx"],"names":["module","exports","Boolean","window","location","hostname","match","Header","className","src","logo","alt","to","ContractPage","value","Table","columns","data","onRowClick","actions","map","column","subColumns","subColumn","key","title","item","index","Object","values","onClick","format","accessor","action","type","text","formatDate","dateString","dateObj","Date","day","getDate","month","getMonth","toString","length","year","getFullYear","hours","getHours","minutes","getMinutes","UsersTable","users","address","substring","slice","date","onDelete","mockUsers","name","mail","role","lastSeen","toISOString","UsersPage","history","event","push","path","console","log","AddressesTable","addresses","mockAddresses","addedAt","user","AddressesPage","JournalPage","Container","TransactionsPage","ROLE_OPTIONS","TIMEZONE_OPTIONS","ADDRESS_OPTIONS","ProfilePage","Dropdown","placeholder","fluid","selection","options","search","UserDetail","routes","exact","component","App","route","render","props","rootReducer","combineReducers","router","connectRouter","createBrowserHistory","store","createStore","compose","applyMiddleware","routerMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4236ec54.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.8ac90c27.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport logo from '../../assets/logo.svg'\nimport './header.scss'\n\nfunction Header() {\n  return (\n    <nav>\n      <ul>\n        <li className=\"logo\"><img src={logo} alt=\"logo\"/> <span className=\"logoText\">обмен- <br/>ник</span></li>\n        <li><Link className=\"link\" to=\"/contract\">Контракт</Link></li>\n        <li><Link className=\"link\" to=\"/users\">Пользователи</Link></li>\n        <li><Link className=\"link\" to=\"/addresses\">Адреса</Link></li>\n        <li><Link className=\"link\" to=\"/journal\">Журнал</Link></li>\n        <li><Link className=\"link\" to=\"/transactions\">Транзакции</Link></li>\n        <li><Link className=\"link\" to=\"/profile\">Мой профиль</Link></li>\n      </ul>\n      <ul>\n        <li className=\"logo\">\n          <Link className=\"link\" to=\"/profile\">mail@mail.mail <span className=\"caret\"></span></Link>\n          <div>\n            <ul>\n              <li><Link className=\"link\" to=\"/profile\">Выйти из системы</Link></li>\n            </ul>\n          </div>\n        </li>\n      </ul>\n    </nav>\n    // <nav class=\"navbar navbar-light bg-light\">\n    //   <a class=\"navbar-brand\" href=\"#\">\n    //     <img src={logo} alt=\"logo\" width=\"30\" height=\"30\" class=\"d-inline-block align-top\" />\n    //     обмен- <br/>\n    //     ник\n    //   </a>\n    // </nav>\n    // <Navbar expand=\"lg\">\n    //   <Navbar.Brand href=\"#home\"><img src={logo} alt=\"logo\"/></Navbar.Brand>\n    //   <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n    //   <Navbar.Collapse id=\"basic-navbar-nav\">\n    //     <Nav className=\"mr-auto\">\n    //       <Link className=\"link\" to=\"/contract\">Контракт</Link>\n    //       <Link className=\"link\" to=\"/users\">Пользователи</Link>\n    //       <Link className=\"link\" to=\"/addresses\">Адреса</Link>\n    //       <Link className=\"link\" to=\"/journal\">Журнал</Link>\n    //       <Link className=\"link\" to=\"/transactions\">Транзакции</Link>\n    //       <Link className=\"link\" to=\"/profile\">Мой профиль</Link>\n    //       <NavDropdown title=\"mail@mail.mail\" id=\"basic-nav-dropdown\" className=\"link\">\n    //         <NavDropdown.Item href=\"#action/3.1\">Выйти из системы</NavDropdown.Item>\n    //       </NavDropdown>\n    //     </Nav>\n    //   </Navbar.Collapse>\n    // </Navbar>\n  )\n\n}\n\nexport default Header;\n","import React from 'react';\nimport './ContractPage.scss'\n\nfunction ContractPage() {\n  return (\n    <div className=\"page-content\">\n      <h1>Контракт</h1>\n      <div className=\"regular-text\">Общий баланс пользователя</div>\n      <div className=\"balance-value\">5 134 312 &#8381;</div>\n      <div className=\"app-input-group\">\n        <div className=\"app-input input-with-button\">\n          <label>Блокчейновый адрес</label>\n          <div className=\"input-button-row\">\n            <input value=\"0xF76d0e464B59EfEa4861dEb2ca57aEabF2d6B756\"/>\n            <button className='secondary-button small-button'>Посмотреть на Эзерскане</button>\n          </div>\n          <div className=\"regular-text\">Пояснительный текст: зачем нужен адрес, когда и на что его надо менять.</div>\n        </div>\n\n        <div className=\"app-input input-with-button\">\n          <label>Адрес чеканщика</label>\n          <div className=\"input-button-row\">\n            <input value=\"0xF76d0e464B59EfEa4861dEb2ca57aEabF2d6B756\"/>\n            <button className='secondary-button small-button'>Посмотреть на Эзерскане</button>\n          </div>\n          <div className=\"regular-text\">Пояснительный текст: зачем нужен адрес, когда и на что его надо менять.</div>\n        </div>\n\n        <div className=\"app-input input-with-button\">\n          <button className=\"warn-button\">Приостановить работу системы</button>\n          <div className=\"regular-text\">Текущие транзакции будут завершены, но создание новых будет временно остановлено.</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ContractPage;\n","import React from 'react';\n\nfunction Table({ columns, data, onRowClick, actions }) {\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          { columns.map(column => {\n              return column.subColumns\n                ? column.subColumns.map(subColumn => <th key={ subColumn.title }>{ subColumn.title }</th>)\n                : <th key={ column.title }>{ column.title }</th>\n          })}\n        </tr>\n      </thead>\n      <tbody>\n        { data.map((item, index) => (\n            <tr className={ `${ onRowClick ? 'clickable' : '' }` } key={ `${ index }-tr` }>\n              { Object.values(item).map((value,index) => {\n                  return columns[index].subColumns \n                    ? columns[index].subColumns.map((subColumn, index) => \n                        <td onClick={ onRowClick } key={ `${ index }-td-sub` }> \n                          { subColumn.format ? subColumn.format(subColumn.accessor(value)): subColumn.accessor(value) } \n                        </td>\n                      )\n                    : <td onClick={ onRowClick } key={ `${ index }-td` }> { columns[index].format ? columns[index].format(value): value } </td>\n        \n              })}\n              <td className=\"table-actions\">\n                { actions.map(action => \n                  <button className={ action.className } type=\"button\" onClick={ action.onClick } key={ action.text }>{ action.text }</button>\n                )}\n              </td>\n            </tr>\n        ))}\n      </tbody>     \n    </table>\n  );\n}\n\nexport default Table;","export function formatDate(dateString) {\n  const dateObj = new Date(dateString);\n\n  const day = dateObj.getDate();\n  const month = dateObj.getMonth().toString().length === 1 ? `0${ dateObj.getMonth() }` : dateObj.getMonth();\n  const year = dateObj.getFullYear();\n  const hours = dateObj.getHours();\n  const minutes = dateObj.getMinutes() === 0 ? '00' : dateObj.getMinutes();\n\n  return `${ day }.${ month }.${ year } ${ hours }:${ minutes }`;\n}","import React from 'react';\nimport Table from '../Table/Table';\nimport { formatDate } from '../../utils';\n\nfunction UsersTable({ users, onRowClick, onDelete }) {\n  const columns = [\n    { title: 'Имя' },\n    { title: 'Адрес', format: address => `${ address.substring(0,7) }...${ address.slice(address.length - 5) }`},\n    { title: 'Почта' },\n    { title: 'Роль' },\n    { title: 'Последний вход', format: date => formatDate(date) },\n  ];\n\n  const actions = [\n    { className: 'secondary-button', onClick: onDelete, text: 'Удалить' },\n  ];\n\n  return (\n    <Table \n      columns={ columns } \n      data={ users } \n      onRowClick={ onRowClick } \n      actions={ actions } \n    />\n  );\n}\n\nexport default UsersTable;\n","import React from 'react';\nimport UsersTable from '../UsersTable/UsersTable';\n\nconst mockUsers = [\n  { name: 'Никаев Фимилион Евлампиевич', address: 'jdshgkjsdhg039g23u0g9u209gu23', mail: 'example@mail.com', role: 'Администратор', lastSeen: new Date().toISOString() },\n  { name: 'Никаев Фимилион Евлампиевич', address: 'jdshgkjsdhg039g23u0g9u209gu23', mail: 'example@mail.com', role: 'Администратор', lastSeen: new Date().toISOString() },\n  { name: 'Никаев Фимилион Евлампиевич', address: 'jdshgkjsdhg039g23u0g9u209gu23', mail: 'example@mail.com', role: 'Администратор', lastSeen: new Date().toISOString() },\n  { name: 'Никаев Фимилион Евлампиевич', address: 'jdshgkjsdhg039g23u0g9u209gu23', mail: 'example@mail.com', role: 'Администратор', lastSeen: new Date().toISOString() },\n  { name: 'Никаев Фимилион Евлампиевич', address: 'jdshgkjsdhg039g23u0g9u209gu23', mail: 'example@mail.com', role: 'Администратор', lastSeen: new Date().toISOString() },\n  { name: 'Никаев Фимилион Евлампиевич', address: 'jdshgkjsdhg039g23u0g9u209gu23', mail: 'example@mail.com', role: 'Администратор', lastSeen: new Date().toISOString() },\n];\n\nfunction UsersPage({ history, match }) {\n  const handleRowClick = event => history.push(`${ match.path }/1`);\n\n  return (\n    <div className=\"page-content\">\n      <h1>Пользователи</h1>\n\n      <button className=\"primary-button\" type=\"button\">Добавить пользователя</button>\n      \n      <UsersTable \n        users={ mockUsers } \n        onRowClick={ handleRowClick } \n        onDelete={ () => console.log('Clicked delete') }\n      />\n    </div>\n  );\n}\n\nexport default UsersPage;\n","import React from 'react';\nimport Table from '../../Table/Table';\nimport { formatDate } from '../../../utils';\n\n\nfunction AddressesTable({ addresses, onDelete }) {\n  const columns = [\n    { title: 'Адрес' },\n    { title: 'Дата добавления', format: date => formatDate(date) },\n    { \n      title: 'Привязанный пользователь', \n      subColumns: [\n        { title:'Имя', accessor: value => value.name }, \n        { title:'Почта', accessor: value => value.mail }, \n        { title:'Роль', accessor: value => value.role }\n      ] \n    },\n  ];\n\n  const actions = [\n    { className: 'secondary-button', onClick: onDelete, text: 'Удалить' },\n  ];\n\n  return (\n    <Table \n      columns={ columns } \n      data={ addresses } \n      actions={ actions } \n    />\n  );\n}\n\nexport default AddressesTable;","import React from 'react';\nimport AddressesTable from './AddressesTable/AddressesTable';\n\n\nconst mockAddresses = [\n  { address: '0xF76d0e464B59EfEa4861dEb2ca57aEabF2d6B756', addedAt: new Date().toISOString(), user: { name: 'Никаев Филимон Евлампиевич', mail: 'example@mail.com', role: 'Админ'} },\n  { address: '0xF76d0e464B59EfEa4861dEb2ca57aEabF2d6B756', addedAt: new Date().toISOString(), user: { name: 'Никаев Филимон Евлампиевич', mail: 'example@mail.com', role: 'Админ'} },\n  { address: '0xF76d0e464B59EfEa4861dEb2ca57aEabF2d6B756', addedAt: new Date().toISOString(), user: { name: 'Никаев Филимон Евлампиевич', mail: 'example@mail.com', role: 'Админ'} },\n  { address: '0xF76d0e464B59EfEa4861dEb2ca57aEabF2d6B756', addedAt: new Date().toISOString(), user: { name: 'Никаев Филимон Евлампиевич', mail: 'example@mail.com', role: 'Админ'} },\n  { address: '0xF76d0e464B59EfEa4861dEb2ca57aEabF2d6B756', addedAt: new Date().toISOString(), user: { name: 'Никаев Филимон Евлампиевич', mail: 'example@mail.com', role: 'Админ'} },\n];\n\nfunction AddressesPage() {\n\n  const handleDelete = event => console.log('Clicked delete');\n\n  return (\n    <div className=\"page-content\">\n      <h1>Адреса</h1>\n      <p className=\"regular-text\">Чтобы добавить пользователю адрес, нужно сперва занести этот адрес в таблицу ниже (переписать)</p>\n      <button className=\"primary-button\" type=\"button\">Добавить</button>\n      <AddressesTable\n        addresses={ mockAddresses }\n        onDelete={ handleDelete }\n      />\n    </div>\n  );\n}\n\nexport default AddressesPage;","import React from 'react';\nimport { Container } from 'react-bootstrap';\n\nfunction JournalPage() {\n  return (\n    <Container>\n      JournalPage\n    </Container>\n  );\n}\n\nexport default JournalPage;","import React from 'react';\nimport { Container } from 'react-bootstrap';\n\nfunction TransactionsPage() {\n  return (\n    <Container>\n      TransactionsPage\n    </Container>\n  );\n}\n\nexport default TransactionsPage;","import React from 'react';\nimport './ProfilePage.scss'\nimport {Dropdown} from \"semantic-ui-react\";\n\nconst ROLE_OPTIONS = [\n  {\n    key: 'Клиент',\n    text: 'Клиент',\n    value: 'Клиент',\n  },\n  {\n    key: 'Администратор',\n    text: 'Администратор',\n    value: 'Администратор',\n  },\n];\n\nconst TIMEZONE_OPTIONS = [\n  {\n    key: 'Россия, Москва',\n    text: 'Россия, Москва',\n    value: 'Россия, Москва',\n  },\n  {\n    key: 'Россия, Владивосток',\n    text: 'Россия, Владивосток',\n    value: 'Россия, Владивосток',\n  },\n];\n\nconst ADDRESS_OPTIONS = [\n  {\n    key: '0xF76d0e464B59EfEa4861dEb2ca57aEabF2d6B756',\n    text: '0xF76d0e464B59EfEa4861dEb2ca57aEabF2d6B756',\n    value: '0xF76d0e464B59EfEa4861dEb2ca57aEabF2d6B756',\n  },\n  {\n    key: '0x71Dc5c85D8f7128459b1e146A9CfFdD7999A9e3F',\n    text: '0x71Dc5c85D8f7128459b1e146A9CfFdD7999A9e3F',\n    value: '0x71Dc5c85D8f7128459b1e146A9CfFdD7999A9e3F',\n  },\n];\nfunction ProfilePage() {\n  return (\n    <div className='page-content'>\n      <h1>Профиль пользователя</h1>\n      <div className='app-input-group'>\n        <div className='app-input'>\n          <label>Роль</label>\n          <Dropdown\n            placeholder='Роль'\n            fluid\n            className=\"small-input app-dropdown-button\"\n            selection\n            options={ROLE_OPTIONS}\n          />\n        </div>\n        <div className='app-input wide-input'>\n          <label>Фамилия, имя, отчество</label>\n          <input value='Никаев Филимон Евлампиевич'/>\n        </div>\n        <div className='app-input wide-input'>\n          <label>Блокчейновый адрес</label>\n          <Dropdown\n            placeholder='Блокчейновый адрес'\n            search\n            fluid\n            className=\"medium-input app-dropdown-search\"\n            selection\n            options={ADDRESS_OPTIONS}\n          />\n          <button className='secondary-button small-button'>Посмотреть на Эзерскане</button>\n        </div>\n        <div className='app-input medium-input'>\n          <label>Электронная почта</label>\n          <input value='mfburgo@outlook.com'/>\n        </div>\n        <div className='app-input small-input'>\n          <label>Пароль</label>\n          <input type='password' value='12345678'/>\n        </div>\n        <div className='app-input'>\n          <label>Часовой пояс</label>\n          <Dropdown\n            placeholder='Часовой пояс'\n            fluid\n            className=\"small-input app-dropdown-button\"\n            selection\n            options={TIMEZONE_OPTIONS}\n          />\n        </div>\n      </div>\n      \n      <div className='app-button-group'>\n        <button className='primary-button'>Сохранить изменения</button>\n        <button className='secondary-button'>Отменить</button>\n      </div>\n    </div>\n  );\n}\n\nexport default ProfilePage;\n","import React from 'react';\nimport './UserDetail.scss';\nimport {Dropdown} from \"semantic-ui-react\";\n\nconst ROLE_OPTIONS = [\n  {\n    key: 'Клиент',\n    text: 'Клиент',\n    value: 'Клиент',\n  },\n  {\n    key: 'Администратор',\n    text: 'Администратор',\n    value: 'Администратор',\n  },\n];\n\nconst ADDRESS_OPTIONS = [\n  {\n    key: '0xF76d0e464B59EfEa4861dEb2ca57aEabF2d6B756',\n    text: '0xF76d0e464B59EfEa4861dEb2ca57aEabF2d6B756',\n    value: '0xF76d0e464B59EfEa4861dEb2ca57aEabF2d6B756',\n  },\n  {\n    key: '0x71Dc5c85D8f7128459b1e146A9CfFdD7999A9e3F',\n    text: '0x71Dc5c85D8f7128459b1e146A9CfFdD7999A9e3F',\n    value: '0x71Dc5c85D8f7128459b1e146A9CfFdD7999A9e3F',\n  },\n];\n\nfunction UserDetail() {\n  return (\n    <div className='page-content'>\n      <h1>Профиль пользователя</h1>\n      <div className='app-input-group'>\n        <div className='app-input'>\n          <label>Роль</label>\n          <Dropdown\n            placeholder='Роль'\n            fluid\n            className=\"small-input app-dropdown-button\"\n            selection\n            options={ROLE_OPTIONS}\n          />\n        </div>\n        <div className='app-input wide-input'>\n          <label>Фамилия, имя, отчество</label>\n          <input value='Никаев Филимон Евлампиевич'/>\n        </div>\n        <div className='app-input wide-input'>\n          <label>Блокчейновый адрес</label>\n          <Dropdown\n            placeholder='Блокчейновый адрес'\n            search\n            fluid\n            className=\"medium-input app-dropdown-search\"\n            selection\n            options={ADDRESS_OPTIONS}\n          />\n          <button className='secondary-button small-button'>Посмотреть на Эзерскане</button>\n        </div>\n        <div className='app-input medium-input'>\n          <label>Электронная почта</label>\n          <input value='mfburgo@outlook.com'/>\n        </div>\n        <div className='app-input small-input'>\n          <label>Пароль</label>\n          <input type='password' value='12345678'/>\n        </div>\n        <div className='app-input'>\n          <label>Часовой пояс</label>\n          <input value='тут должен быть дропдаун'/>\n        </div>\n      </div>\n\n      <h2>Платёжные реквизиты</h2>\n      <div className='app-input-group'>\n        <div className='app-input wide-input'>\n          <label>Наименование плательщика</label>\n          <input value='ОАО «Сетевая компания»'/>\n        </div>\n        <div className='app-input medium-input'>\n          <label>Расчётный счёт</label>\n          <input value='40702810500000000072'/>\n        </div>\n        <div className='app-input wide-input'>\n          <label>Наименование банка</label>\n          <input value='ООО Банк «Аверс»'/>\n        </div>\n        <div className='app-input tiny-input'>\n          <label>БИК</label>\n          <input value='049205774'/>\n        </div>\n        <div className='app-input small-input'>\n          <label>Корреспондентский счет</label>\n          <input value='30101810500000000774'/>\n        </div>\n        <div className='app-input tiny-input'>\n          <label>ИНН</label>\n          <input value='1653003601'/>\n        </div>\n        <div className='app-input tiny-input'>\n          <label>КПП</label>\n          <input value='165501001'/>\n        </div>\n      </div>\n      <div className='app-button-group'>\n        <button className='primary-button'>Сохранить изменения</button>\n        <button className='secondary-button'>Отменить</button>\n      </div>\n    </div>\n  );\n}\n\nexport default UserDetail;\n","import ContractPage from \"./components/ContractPage/ContractPage\";\nimport UsersPage from \"./components/UsersPage/UsersPage\";\nimport AddressesPage from \"./components/AddressesPage/AddressesPage\";\nimport JournalPage from \"./components/JournalPage/JournalPage\";\nimport TransactionsPage from \"./components/TransactionsPage/TransactionsPage\";\nimport ProfilePage from \"./components/ProfilePage/ProfilePage\";\nimport UserDetail from \"./components/UsersPage/UserDetail/UserDetail\";\n\nconst routes = [\n  { path: '/contract', exact: true, component: ContractPage },\n  { path: '/users', exact: true, component: UsersPage },\n  { path: '/users/:userId', exact: false, component: UserDetail },\n  { path: '/addresses', exact: true, component: AddressesPage },\n  { path: '/journal', exact: true, component: JournalPage },\n  { path: '/transactions', exact: true, component: TransactionsPage },\n  { path: '/profile', exact: true, component: ProfilePage },\n];\n\nexport default routes;","import React from 'react';\nimport { Switch, Route } from 'react-router'\nimport Header from './Header/header';\nimport './App.scss';\nimport routes from './../routes';\nimport '../styles/main.scss'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Switch>\n        { routes.map((route, index) => {\n            return route.component ? (\n              <Route \n                key={ index }\n                path={ route.path }\n                exact={ route.exact }\n                name={ route.name }\n                render={ props => (\n                  <route.component { ...props } />\n                )} />\n            ) : null;\n        })}\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\n\nconst rootReducer = history => combineReducers({\n  router: connectRouter(history),\n});\n\nexport default rootReducer;\n","import { createBrowserHistory } from 'history';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { routerMiddleware } from 'connected-react-router';\nimport rootReducer from './reducers';\n\nexport const history = createBrowserHistory();\n\nexport default function configureStore() {\n  const store = createStore(\n    rootReducer(history), // root reducer with router state\n\n    compose(\n      applyMiddleware(\n        routerMiddleware(history), // for dispatching history actions\n        // ... other middlewares ...\n      ),\n    ),\n  );\n\n  return store;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport * as serviceWorker from './serviceWorker';\nimport App from './components/App';\nimport configureStore, { history } from './store/configureStore';\n\nimport './index.scss';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={ store }>\n    <ConnectedRouter history={ history }>\n      <App />\n    </ConnectedRouter>\n  </Provider>,\ndocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}