{"ast":null,"code":"import _slicedToArray from\"/Users/macbook/Documents/Work/MrDrap1/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{formatDate}from'../../../utils';import'./TransactionsTableClient.scss';function TransactionsTableClient(_ref){var transactions=_ref.transactions,onRowClick=_ref.onRowClick;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),selectedRowIndex=_useState2[0],setSelectedRowIndex=_useState2[1];var columns=[{title:'Дата'},{title:'Контрагент'},{title:'Дебет ₽'},{title:'Кредит ₽'},{title:'Остаток по счёту ₽'},{title:'Статус'}];var handleRowClick=function handleRowClick(event){setSelectedRowIndex(event.target.id);if(onRowClick){onRowClick();}};return React.createElement(\"table\",{className:\"table\"},React.createElement(\"thead\",null,React.createElement(\"tr\",null,columns.map(function(column){return React.createElement(\"th\",{key:column.title},column.title);}))),React.createElement(\"tbody\",null,transactions.map(function(transaction,index){var isFinished=transaction.status==='Выполнено';var isCredit=transaction.credit!==null;var onClick=isFinished?handleRowClick:undefined;return React.createElement(\"tr\",{className:\"\".concat(isFinished?'clickable':'',\" \").concat(isFinished&&index===parseInt(selectedRowIndex)?'selected':''),onClick:isFinished?onClick:undefined,key:index},React.createElement(\"td\",{id:index},formatDate(transaction.date)),React.createElement(\"td\",{id:index},transaction.contragent),React.createElement(\"td\",{id:index,className:\"\".concat(!isCredit&&'green',\" \").concat(!isFinished&&'grey')},transaction.debit===null?'—':transaction.debit.toLocaleString()),React.createElement(\"td\",{id:index,className:\"\".concat(isCredit&&'red',\" \").concat(!isFinished&&'grey')},transaction.credit===null?'—':transaction.credit.toLocaleString()),React.createElement(\"td\",{id:index,className:\"\".concat(!isFinished&&'grey')},transaction.balance===null?'—':transaction.balance.toLocaleString()),React.createElement(\"td\",{id:index,className:\"\".concat(isFinished?'green':'grey')},transaction.status));})));}export default TransactionsTableClient;","map":{"version":3,"sources":["/Users/macbook/Documents/Work/MrDrap1/src/components/TransactionsPage/TransactionsTableClient/TransactionsTableClient.jsx"],"names":["React","useState","formatDate","TransactionsTableClient","transactions","onRowClick","selectedRowIndex","setSelectedRowIndex","columns","title","handleRowClick","event","target","id","map","column","transaction","index","isFinished","status","isCredit","credit","onClick","undefined","parseInt","date","contragent","debit","toLocaleString","balance"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { formatDate } from '../../../utils';\nimport './TransactionsTableClient.scss';\n\nfunction TransactionsTableClient({ transactions, onRowClick }) {\n  const [selectedRowIndex, setSelectedRowIndex] = useState(null);\n\n  const columns = [\n    { title: 'Дата' },\n    { title: 'Контрагент' },\n    { title: 'Дебет ₽' },\n    { title: 'Кредит ₽' },\n    { title: 'Остаток по счёту ₽' },\n    { title: 'Статус' }\n  ];\n\n  const handleRowClick = event => {\n    setSelectedRowIndex(event.target.id);\n    if (onRowClick) {\n      onRowClick();\n    }\n  };\n\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          { columns.map(column => <th key={ column.title }>{ column.title }</th>) }\n        </tr>\n      </thead>\n      <tbody>\n        { transactions.map((transaction,index) => {\n            const isFinished = transaction.status === 'Выполнено';\n            const isCredit = transaction.credit !== null;\n            const onClick = isFinished ? handleRowClick : undefined;\n            return (\n              <tr className={ `${ isFinished ? 'clickable' : '' } ${ (isFinished && (index === parseInt(selectedRowIndex))) ? 'selected' : '' }`} onClick={ isFinished ? onClick : undefined } key={ index } >\n                <td id={ index }>{ formatDate(transaction.date) }</td>\n                <td id={ index }>{ transaction.contragent }</td>\n                <td id={ index } className={ `${ !isCredit && 'green' } ${ !isFinished && 'grey' }` } >{ transaction.debit === null ? '—' : transaction.debit.toLocaleString() }</td>\n                <td id={ index } className={ `${ isCredit && 'red' } ${ !isFinished && 'grey' }`} >{ transaction.credit === null ? '—' : transaction.credit.toLocaleString() }</td>\n                <td id={ index } className={ `${ !isFinished && 'grey' }` } >{ transaction.balance === null ? '—' : transaction.balance.toLocaleString() }</td>\n                <td id={ index } className={ `${ isFinished ? 'green' : 'grey' }` } >{ transaction.status }</td>\n              </tr>);\n        })}\n      </tbody>\n    </table>\n  );\n}\n\nexport default TransactionsTableClient;\n"]},"metadata":{},"sourceType":"module"}